(and (nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r r r r))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(f f g q x))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r r r r))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(j))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(j))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(f f q x))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(f f f q x))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(y))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(f g q x))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(y))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(o))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r r r))(nfa-test (nfa-regexp-comp  '(or (seq (star r) (star r)) (seq (or j y o)) (seq (star f) (or f g u) (seq q x)))) '(r))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d d d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d d d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d))(nfa-test (nfa-regexp-comp  '(or (plus (seq d)) (seq (plus h)))) '(d))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '())(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(u r c))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(e e))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(k k k))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(u r c u r c))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(k))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(e))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(e))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(t t))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(t))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(k k))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(e))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(k k k))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(k k))(nfa-test (nfa-regexp-comp  '(or (or (star t) (plus k)) (plus (seq u r c)) (seq (seq (star e))))) '(e))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(h))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(z))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '())(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(z))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '())(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x x))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '())(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '())(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '())(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(h h))(nfa-test (nfa-regexp-comp  '(or (star x) (seq (star z)) (star (or x h)))) '(x x))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(z z))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(l l l))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(z))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q q))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(z))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(l l))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(l l))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(l l l))(nfa-test (nfa-regexp-comp  '(plus (seq (seq (or l q z))))) '(q q))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y s))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y s w j y s))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y a w j y a))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '())(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y a))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y s w j y s))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y a))(nfa-test (nfa-regexp-comp  '(star (seq (seq w j y) (or o a s)))) '(w j y o w j y o))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p b z z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p b))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u p k k))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p k k))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u v b b z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u v b))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u p b))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u v b b b))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p k z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p k k z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u a u u v b b z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u p k k z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u v ))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u a u u a u u p b b))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (seq a u u)) (seq (or p v)) (or (plus b) (star k))) (star (or z)))) '(a u u v b z))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(o o o i n u l p p p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(o o o i n u l p v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w w i n u l z z p p v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w w w i n u l z p p p p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(r r r i n u l p p v v v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(r i n u l z v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w i n u l z p v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w i n u l z p p v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(o o i n u l p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w w i n u l z p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(r r r i n u l z z p p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(o o o i n u l p p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(o o o i n u l z z p p))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(r r i n u l p p v v))(nfa-test (nfa-regexp-comp  '(seq (seq (plus (or w o r)) (seq (seq i n u) (seq l) (star z))) (seq (star p)) (plus (or p v)))) '(w i n u l p p p))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r))(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '())(nfa-test (nfa-regexp-comp  '(or (or (star r)))) '(r))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(z v k))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(c c c p))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(f f))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(g h))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '())(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(g h))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(z v k))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(c c p m))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(c c p m m))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(z v k))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(u u))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '())(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '())(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(c c c p))(nfa-test (nfa-regexp-comp  '(or (seq (plus c) (star p) (star m)) (or (or (seq z v k)) (star f)) (or (star u) (seq g h)))) '(g h)))